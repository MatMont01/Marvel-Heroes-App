import 'package:flutter/material.dart';
import '../models/hero_model.dart';
import '../models/movie_model.dart';
import '../providers/database_provider.dart';

class CreateMoviePage extends StatefulWidget {
  @override
  _CreateMoviePageState createState() => _CreateMoviePageState();
}

class _CreateMoviePageState extends State<CreateMoviePage> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _imageUrlController = TextEditingController();
  List<HeroModel> _heroes = [];
  List<String> _selectedCharacters = [];

  @override
  void initState() {
    super.initState();
    _loadHeroes();
  }

  Future<void> _loadHeroes() async {
    List<HeroModel> heroes = await DatabaseProvider().getHeroes();
    setState(() {
      _heroes = heroes;
    });
  }

  Future<void> _saveMovie() async {
    if (_formKey.currentState!.validate()) {
      final newMovie = MovieModel(
        id: 0, // The ID will be auto-generated by the database
        title: _titleController.text,
        imageUrl: _imageUrlController.text,
        characters: _selectedCharacters,
      );

      await DatabaseProvider().insertMovie(newMovie);
      Navigator.pop(context, newMovie);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Crear Película'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _titleController,
                decoration: InputDecoration(labelText: 'Título'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor ingresa un título';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _imageUrlController,
                decoration: InputDecoration(labelText: 'URL de la Imagen'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor ingresa una URL de imagen';
                  }
                  return null;
                },
              ),
              SizedBox(height: 20),
              Text('Selecciona los personajes:',
                  style: TextStyle(fontSize: 16)),
              Expanded(
                child: ListView.builder(
                  itemCount: _heroes.length,
                  itemBuilder: (context, index) {
                    final hero = _heroes[index];
                    return CheckboxListTile(
                      title: Text(hero.name),
                      value: _selectedCharacters.contains(hero.name),
                      onChanged: (bool? value) {
                        setState(() {
                          if (value == true) {
                            _selectedCharacters.add(hero.name);
                          } else {
                            _selectedCharacters.remove(hero.name);
                          }
                        });
                      },
                    );
                  },
                ),
              ),
              ElevatedButton(
                onPressed: _saveMovie,
                child: Text('Guardar'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
